/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cinemuski;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.ImageIcon;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.imageio.ImageReadParam;
import javax.imageio.ImageReader;
import javax.imageio.stream.ImageInputStream;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Andre
 */
public class Principal extends javax.swing.JFrame {

    String url = "jdbc:mysql://localhost:3306/Cine";
    String user = "root";
    String pass = "muski";
    Statement sta;
    Connection con;
    PreparedStatement insertar;
    ResultSet registro, contador;
    String pelicula, horario, sala;
    String nombre, apellido, asiento;
    BDPeliculas peli = new BDPeliculas();
    String ruta = null;
    ImageIcon icono = null;
    String horarioborrar, salaborrar, asientoborrar, nombreborrar, apellidoborrar;
    String horarionuevo, salanuevo, asientonuevo, peliculanuevo, salaeliminar, horarioeliminar;
    String nombreu, apellidou, usuariou;
    String usuario;
    String ssqqll;
    boolean usuarioexistente;
    int puntos;

    public Principal() {
        initComponents();
        setTitle("MUSKINEMA");
        setIconImage(new ImageIcon(getClass().getResource("/imagen/cineicono.png")).getImage());
        setSize(1160, 640);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        z3 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        z1 = new javax.swing.JButton();
        z2 = new javax.swing.JButton();
        z4 = new javax.swing.JButton();
        padre = new javax.swing.JPanel();
        mostrableee = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        taquillaaa = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        taquillaaa2 = new javax.swing.JPanel();
        comprarrr = new javax.swing.JPanel();
        asientocomprarrr = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        imagen = new javax.swing.JLabel();
        reparto = new javax.swing.JLabel();
        director = new javax.swing.JLabel();
        duracion = new javax.swing.JLabel();
        genero = new javax.swing.JLabel();
        gen = new javax.swing.JLabel();
        dur = new javax.swing.JLabel();
        dir = new javax.swing.JLabel();
        repp = new javax.swing.JLabel();
        canbol1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        asiento1 = new javax.swing.JButton();
        asiento2 = new javax.swing.JButton();
        asiento3 = new javax.swing.JButton();
        asiento4 = new javax.swing.JButton();
        asiento5 = new javax.swing.JButton();
        asiento6 = new javax.swing.JButton();
        asiento7 = new javax.swing.JButton();
        asiento8 = new javax.swing.JButton();
        asiento9 = new javax.swing.JButton();
        asiento10 = new javax.swing.JButton();
        asiento11 = new javax.swing.JButton();
        asiento12 = new javax.swing.JButton();
        asiento13 = new javax.swing.JButton();
        asiento14 = new javax.swing.JButton();
        asiento15 = new javax.swing.JButton();
        asiento16 = new javax.swing.JButton();
        asiento17 = new javax.swing.JButton();
        asiento18 = new javax.swing.JButton();
        asiento19 = new javax.swing.JButton();
        asiento20 = new javax.swing.JButton();
        asiento21 = new javax.swing.JButton();
        asiento22 = new javax.swing.JButton();
        asiento23 = new javax.swing.JButton();
        asiento24 = new javax.swing.JButton();
        asiento25 = new javax.swing.JButton();
        asiento26 = new javax.swing.JButton();
        asiento27 = new javax.swing.JButton();
        asiento28 = new javax.swing.JButton();
        asiento29 = new javax.swing.JButton();
        asiento30 = new javax.swing.JButton();
        jButton56 = new javax.swing.JButton();
        jLabel80 = new javax.swing.JLabel();
        nsal = new javax.swing.JLabel();
        jButton57 = new javax.swing.JButton();
        jLabel81 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        nhor = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablacomprar = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        cancelarrr = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablacancelar = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        canbol = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        modificarrr = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablamodificar1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablamodificar2 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        asientomodificar = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();
        canbol2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        peliculasss = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        peliculasss2 = new javax.swing.JPanel();
        registrarrrpeli = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tituloregi = new javax.swing.JTextField();
        generoregi = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        duracionregi = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        directorregi = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        repartoregi = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        subirregi = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        registrarrrpeli1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        buscarrrpeli = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jtitulo = new javax.swing.JLabel();
        titulobus = new javax.swing.JTextField();
        buscar = new javax.swing.JButton();
        buscar1 = new javax.swing.JButton();
        generobus = new javax.swing.JLabel();
        duracionbus = new javax.swing.JLabel();
        directorbus = new javax.swing.JLabel();
        repartobus = new javax.swing.JLabel();
        imagen2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        mostrarrrpeli = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablamos = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        imagen1 = new javax.swing.JLabel();
        gen1 = new javax.swing.JLabel();
        genero1 = new javax.swing.JLabel();
        duracion1 = new javax.swing.JLabel();
        dur1 = new javax.swing.JLabel();
        dir1 = new javax.swing.JLabel();
        director1 = new javax.swing.JLabel();
        reparto1 = new javax.swing.JLabel();
        repp1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        eliminarrrpeli = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        tituloelim = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        horariosss = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        horariosss2 = new javax.swing.JPanel();
        crearrrhor = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablahora = new javax.swing.JTable();
        jLabel32 = new javax.swing.JLabel();
        salahora = new javax.swing.JComboBox<>();
        horahora = new javax.swing.JComboBox<>();
        jLabel33 = new javax.swing.JLabel();
        jButton17 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        modificarrrhor = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tablamodhor = new javax.swing.JTable();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        salamodhor = new javax.swing.JComboBox<>();
        horamodhora = new javax.swing.JComboBox<>();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        modif = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        mostrarrrhor = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tablamoshor = new javax.swing.JTable();
        jLabel28 = new javax.swing.JLabel();
        eliminarrrhor = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tablaelihor = new javax.swing.JTable();
        elim = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        usuariosss = new javax.swing.JPanel();
        nombreusu = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        apellidousu = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        telefonousu = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        correousu = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        direccionusu = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        registrar = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        tablausu = new javax.swing.JTable();
        bor = new javax.swing.JButton();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        usuariousu = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 51, 51));
        jPanel1.setLayout(null);

        z3.setText("USUARIOS");
        z3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        z3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                z3ActionPerformed(evt);
            }
        });
        jPanel1.add(z3);
        z3.setBounds(1060, 0, 90, 23);

        jButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/muskinema.png"))); // NOI18N
        jButton18.setText("jButton18");
        jButton18.setContentAreaFilled(false);
        jButton18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton18);
        jButton18.setBounds(390, 0, 390, 90);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1170, 80);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        z1.setText("PELICULAS");
        z1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        z1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                z1ActionPerformed(evt);
            }
        });

        z2.setText("HORARIOS");
        z2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        z2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                z2ActionPerformed(evt);
            }
        });

        z4.setText("TAQUILLA");
        z4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        z4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                z4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(405, Short.MAX_VALUE)
                .addComponent(z4)
                .addGap(64, 64, 64)
                .addComponent(z1)
                .addGap(59, 59, 59)
                .addComponent(z2)
                .addGap(389, 389, 389))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(z1)
                    .addComponent(z2)
                    .addComponent(z4))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 80, 1170, 50);

        padre.setBackground(new java.awt.Color(255, 255, 255));
        padre.setLayout(new java.awt.CardLayout());

        mostrableee.setBackground(new java.awt.Color(255, 255, 255));

        jLabel48.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/estrenos.png"))); // NOI18N

        javax.swing.GroupLayout mostrableeeLayout = new javax.swing.GroupLayout(mostrableee);
        mostrableee.setLayout(mostrableeeLayout);
        mostrableeeLayout.setHorizontalGroup(
            mostrableeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mostrableeeLayout.setVerticalGroup(
            mostrableeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mostrableeeLayout.createSequentialGroup()
                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
        );

        padre.add(mostrableee, "card5");

        taquillaaa.setBackground(new java.awt.Color(51, 255, 51));
        taquillaaa.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(1170, 210));
        jPanel3.setLayout(null);

        jButton1.setText("COMPRAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);
        jButton1.setBounds(392, 11, 90, 23);

        jButton2.setText("CANCELAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);
        jButton2.setBounds(534, 11, 100, 23);

        jButton3.setText("MODIFICAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3);
        jButton3.setBounds(682, 11, 100, 23);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondotaq.jpg"))); // NOI18N
        jPanel3.add(jLabel2);
        jLabel2.setBounds(0, 0, 1170, 490);

        taquillaaa.add(jPanel3);
        jPanel3.setBounds(0, 0, 1170, 50);

        taquillaaa2.setLayout(new java.awt.CardLayout());

        comprarrr.setBackground(new java.awt.Color(255, 255, 255));
        comprarrr.setLayout(null);

        asientocomprarrr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30" }));
        asientocomprarrr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asientocomprarrrActionPerformed(evt);
            }
        });
        comprarrr.add(asientocomprarrr);
        asientocomprarrr.setBounds(810, 340, 100, 30);

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("INGRESE EL ASIENTO QUE DESEA");
        comprarrr.add(jLabel6);
        jLabel6.setBounds(680, 300, 350, 30);

        jButton4.setText("COMPRAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        comprarrr.add(jButton4);
        jButton4.setBounds(810, 380, 100, 40);

        imagen.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        imagen.setForeground(new java.awt.Color(255, 255, 255));
        imagen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagen.setText("IMAGEN");
        comprarrr.add(imagen);
        imagen.setBounds(50, 250, 130, 180);

        reparto.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        reparto.setForeground(new java.awt.Color(255, 255, 255));
        reparto.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        reparto.setText("REPARTO:");
        comprarrr.add(reparto);
        reparto.setBounds(190, 390, 80, 30);

        director.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        director.setForeground(new java.awt.Color(255, 255, 255));
        director.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        director.setText("DIRECTOR:");
        comprarrr.add(director);
        director.setBounds(190, 350, 90, 30);

        duracion.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        duracion.setForeground(new java.awt.Color(255, 255, 255));
        duracion.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        duracion.setText("DURACION:");
        comprarrr.add(duracion);
        duracion.setBounds(190, 310, 100, 30);

        genero.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        genero.setForeground(new java.awt.Color(255, 255, 255));
        genero.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        genero.setText("GENERO:");
        comprarrr.add(genero);
        genero.setBounds(190, 270, 90, 30);

        gen.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        gen.setForeground(new java.awt.Color(255, 255, 255));
        gen.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        comprarrr.add(gen);
        gen.setBounds(290, 270, 440, 30);

        dur.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        dur.setForeground(new java.awt.Color(255, 255, 255));
        dur.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        comprarrr.add(dur);
        dur.setBounds(290, 310, 440, 30);

        dir.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        dir.setForeground(new java.awt.Color(255, 255, 255));
        dir.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        comprarrr.add(dir);
        dir.setBounds(290, 350, 440, 30);

        repp.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        repp.setForeground(new java.awt.Color(255, 255, 255));
        repp.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        comprarrr.add(repp);
        repp.setBounds(290, 390, 440, 30);

        canbol1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/COMPRARBOL.png"))); // NOI18N
        canbol1.setContentAreaFilled(false);
        canbol1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        comprarrr.add(canbol1);
        canbol1.setBounds(470, 0, 230, 70);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(null);

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("30");
        jPanel6.add(jLabel41);
        jLabel41.setBounds(380, 10, 20, 30);

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel51.setText("29");
        jPanel6.add(jLabel51);
        jLabel51.setBounds(340, 10, 20, 30);

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel52.setText("28");
        jPanel6.add(jLabel52);
        jLabel52.setBounds(300, 10, 20, 30);

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel53.setText("27");
        jPanel6.add(jLabel53);
        jLabel53.setBounds(260, 10, 20, 30);

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel54.setText("26");
        jPanel6.add(jLabel54);
        jLabel54.setBounds(220, 10, 20, 30);

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel55.setText("25");
        jPanel6.add(jLabel55);
        jLabel55.setBounds(180, 10, 20, 30);

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel56.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel56.setText("24");
        jPanel6.add(jLabel56);
        jLabel56.setBounds(140, 10, 20, 30);

        jLabel57.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel57.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel57.setText("23");
        jPanel6.add(jLabel57);
        jLabel57.setBounds(100, 10, 20, 30);

        jLabel58.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel58.setText("22");
        jPanel6.add(jLabel58);
        jLabel58.setBounds(60, 10, 20, 30);

        jLabel59.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel59.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel59.setText("21");
        jPanel6.add(jLabel59);
        jLabel59.setBounds(20, 10, 20, 30);

        jLabel60.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel60.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel60.setText("11");
        jPanel6.add(jLabel60);
        jLabel60.setBounds(20, 50, 20, 30);

        jLabel61.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel61.setText("12");
        jPanel6.add(jLabel61);
        jLabel61.setBounds(60, 50, 20, 30);

        jLabel62.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel62.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel62.setText("13");
        jPanel6.add(jLabel62);
        jLabel62.setBounds(100, 50, 20, 30);

        jLabel63.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel63.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel63.setText("14");
        jPanel6.add(jLabel63);
        jLabel63.setBounds(140, 50, 20, 30);

        jLabel64.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel64.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel64.setText("15");
        jPanel6.add(jLabel64);
        jLabel64.setBounds(180, 50, 20, 30);

        jLabel65.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel65.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel65.setText("16");
        jPanel6.add(jLabel65);
        jLabel65.setBounds(220, 50, 20, 30);

        jLabel66.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel66.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel66.setText("17");
        jPanel6.add(jLabel66);
        jLabel66.setBounds(260, 50, 20, 30);

        jLabel67.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel67.setText("18");
        jPanel6.add(jLabel67);
        jLabel67.setBounds(300, 50, 20, 30);

        jLabel68.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel68.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel68.setText("19");
        jPanel6.add(jLabel68);
        jLabel68.setBounds(340, 50, 20, 30);

        jLabel69.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel69.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel69.setText("20");
        jPanel6.add(jLabel69);
        jLabel69.setBounds(380, 50, 20, 30);

        jLabel70.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel70.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel70.setText("2");
        jPanel6.add(jLabel70);
        jLabel70.setBounds(60, 90, 20, 30);

        jLabel71.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel71.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel71.setText("3");
        jPanel6.add(jLabel71);
        jLabel71.setBounds(100, 90, 20, 30);

        jLabel72.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel72.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel72.setText("4");
        jPanel6.add(jLabel72);
        jLabel72.setBounds(140, 90, 20, 30);

        jLabel73.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel73.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel73.setText("10");
        jPanel6.add(jLabel73);
        jLabel73.setBounds(380, 90, 20, 30);

        jLabel74.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel74.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel74.setText("9");
        jPanel6.add(jLabel74);
        jLabel74.setBounds(340, 90, 20, 30);

        jLabel75.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel75.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel75.setText("8");
        jPanel6.add(jLabel75);
        jLabel75.setBounds(300, 90, 20, 30);

        jLabel76.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel76.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel76.setText("7");
        jPanel6.add(jLabel76);
        jLabel76.setBounds(260, 90, 20, 30);

        jLabel77.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel77.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel77.setText("6");
        jPanel6.add(jLabel77);
        jLabel77.setBounds(220, 90, 20, 30);

        jLabel78.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel78.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel78.setText("5");
        jPanel6.add(jLabel78);
        jLabel78.setBounds(180, 90, 20, 30);

        jLabel79.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel79.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel79.setText("1");
        jPanel6.add(jLabel79);
        jLabel79.setBounds(21, 90, 20, 30);

        asiento1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento1.setContentAreaFilled(false);
        asiento1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        asiento1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asiento1ActionPerformed(evt);
            }
        });
        jPanel6.add(asiento1);
        asiento1.setBounds(0, 80, 63, 54);

        asiento2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento2.setContentAreaFilled(false);
        asiento2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asiento2ActionPerformed(evt);
            }
        });
        jPanel6.add(asiento2);
        asiento2.setBounds(40, 80, 63, 54);

        asiento3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento3.setContentAreaFilled(false);
        jPanel6.add(asiento3);
        asiento3.setBounds(80, 80, 63, 54);

        asiento4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento4.setContentAreaFilled(false);
        jPanel6.add(asiento4);
        asiento4.setBounds(120, 80, 63, 54);

        asiento5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento5.setContentAreaFilled(false);
        jPanel6.add(asiento5);
        asiento5.setBounds(160, 80, 63, 54);

        asiento6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento6.setContentAreaFilled(false);
        jPanel6.add(asiento6);
        asiento6.setBounds(200, 80, 63, 54);

        asiento7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento7.setContentAreaFilled(false);
        jPanel6.add(asiento7);
        asiento7.setBounds(240, 80, 63, 54);

        asiento8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento8.setContentAreaFilled(false);
        jPanel6.add(asiento8);
        asiento8.setBounds(280, 80, 63, 54);

        asiento9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento9.setContentAreaFilled(false);
        jPanel6.add(asiento9);
        asiento9.setBounds(320, 80, 63, 54);

        asiento10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento10.setContentAreaFilled(false);
        jPanel6.add(asiento10);
        asiento10.setBounds(360, 80, 63, 54);

        asiento11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento11.setContentAreaFilled(false);
        jPanel6.add(asiento11);
        asiento11.setBounds(0, 40, 63, 54);

        asiento12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento12.setContentAreaFilled(false);
        jPanel6.add(asiento12);
        asiento12.setBounds(40, 40, 63, 54);

        asiento13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento13.setContentAreaFilled(false);
        jPanel6.add(asiento13);
        asiento13.setBounds(80, 40, 63, 54);

        asiento14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento14.setContentAreaFilled(false);
        jPanel6.add(asiento14);
        asiento14.setBounds(120, 40, 63, 54);

        asiento15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento15.setContentAreaFilled(false);
        jPanel6.add(asiento15);
        asiento15.setBounds(160, 40, 63, 54);

        asiento16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento16.setContentAreaFilled(false);
        jPanel6.add(asiento16);
        asiento16.setBounds(200, 40, 63, 54);

        asiento17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento17.setContentAreaFilled(false);
        jPanel6.add(asiento17);
        asiento17.setBounds(240, 40, 63, 54);

        asiento18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento18.setContentAreaFilled(false);
        jPanel6.add(asiento18);
        asiento18.setBounds(280, 40, 63, 54);

        asiento19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento19.setContentAreaFilled(false);
        jPanel6.add(asiento19);
        asiento19.setBounds(320, 40, 63, 54);

        asiento20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento20.setContentAreaFilled(false);
        jPanel6.add(asiento20);
        asiento20.setBounds(360, 40, 63, 54);

        asiento21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento21.setContentAreaFilled(false);
        jPanel6.add(asiento21);
        asiento21.setBounds(0, 0, 63, 54);

        asiento22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento22.setContentAreaFilled(false);
        jPanel6.add(asiento22);
        asiento22.setBounds(40, 0, 63, 54);

        asiento23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento23.setContentAreaFilled(false);
        jPanel6.add(asiento23);
        asiento23.setBounds(80, 0, 63, 54);

        asiento24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento24.setContentAreaFilled(false);
        jPanel6.add(asiento24);
        asiento24.setBounds(120, 0, 63, 54);

        asiento25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento25.setContentAreaFilled(false);
        jPanel6.add(asiento25);
        asiento25.setBounds(160, 0, 63, 54);

        asiento26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento26.setContentAreaFilled(false);
        jPanel6.add(asiento26);
        asiento26.setBounds(200, 0, 63, 54);

        asiento27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento27.setContentAreaFilled(false);
        jPanel6.add(asiento27);
        asiento27.setBounds(240, 0, 63, 54);

        asiento28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento28.setContentAreaFilled(false);
        jPanel6.add(asiento28);
        asiento28.setBounds(280, 0, 63, 54);

        asiento29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento29.setContentAreaFilled(false);
        jPanel6.add(asiento29);
        asiento29.setBounds(320, 0, 63, 54);

        asiento30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        asiento30.setContentAreaFilled(false);
        jPanel6.add(asiento30);
        asiento30.setBounds(360, 0, 63, 54);

        jButton56.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png"))); // NOI18N
        jButton56.setContentAreaFilled(false);
        jPanel6.add(jButton56);
        jButton56.setBounds(250, 140, 40, 40);

        jLabel80.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel80.setText("ASIENTO OCUPADO");
        jPanel6.add(jLabel80);
        jLabel80.setBounds(290, 150, 110, 20);

        nsal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nsal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel6.add(nsal);
        nsal.setBounds(200, 140, 30, 20);

        jButton57.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png"))); // NOI18N
        jButton57.setContentAreaFilled(false);
        jPanel6.add(jButton57);
        jButton57.setBounds(10, 140, 40, 40);

        jLabel81.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel81.setText("ASIENTO DESOCUPADO");
        jPanel6.add(jLabel81);
        jLabel81.setBounds(50, 150, 130, 20);

        jLabel83.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel83.setText("SALA");
        jPanel6.add(jLabel83);
        jLabel83.setBounds(200, 120, 29, 20);

        nhor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nhor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel6.add(nhor);
        nhor.setBounds(190, 160, 50, 20);

        comprarrr.add(jPanel6);
        jPanel6.setBounds(710, 50, 420, 190);

        tablacomprar=new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tablacomprar.setBackground(new java.awt.Color(0, 0, 0));
        tablacomprar.setForeground(new java.awt.Color(255, 255, 255));
        tablacomprar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sala", "Pelicula", "Horario"
            }
        ));
        tablacomprar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablacomprarcomprarMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tablacomprar);

        comprarrr.add(jScrollPane2);
        jScrollPane2.setBounds(30, 50, 420, 190);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondotaq.jpg"))); // NOI18N
        comprarrr.add(jLabel3);
        jLabel3.setBounds(0, 0, 1170, 440);

        taquillaaa2.add(comprarrr, "card4");

        cancelarrr.setLayout(null);

        tablacancelar=new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tablacancelar.setBackground(new java.awt.Color(0, 0, 0));
        tablacancelar.setForeground(new java.awt.Color(255, 255, 255));
        tablacancelar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sala", "Pelicula", "Horario"
            }
        ));
        tablacancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablacancelarMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(tablacancelar);

        cancelarrr.add(jScrollPane3);
        jScrollPane3.setBounds(150, 100, 870, 190);

        jButton5.setText("CANCELAR BOLETO");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        cancelarrr.add(jButton5);
        jButton5.setBounds(510, 320, 170, 40);

        canbol.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/cancelartaq.png"))); // NOI18N
        canbol.setContentAreaFilled(false);
        canbol.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cancelarrr.add(canbol);
        canbol.setBounds(470, 10, 230, 70);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondotaq.jpg"))); // NOI18N
        cancelarrr.add(jLabel1);
        jLabel1.setBounds(0, 0, 1170, 560);

        taquillaaa2.add(cancelarrr, "card3");

        modificarrr.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("SELECCIONE EL BOLETO A MODIFICAR");
        modificarrr.add(jLabel5);
        jLabel5.setBounds(140, 60, 310, 30);

        tablamodificar1=new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tablamodificar1.setBackground(new java.awt.Color(0, 0, 0));
        tablamodificar1.setForeground(new java.awt.Color(255, 255, 255));
        tablamodificar1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sala", "Pelicula", "Horario"
            }
        ));
        tablamodificar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablamodificar1MousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(tablamodificar1);

        modificarrr.add(jScrollPane4);
        jScrollPane4.setBounds(140, 90, 920, 90);

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("ELIJA UN NUEVO HORARIO ");
        modificarrr.add(jLabel7);
        jLabel7.setBounds(140, 190, 310, 30);

        tablamodificar2=new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tablamodificar2.setBackground(new java.awt.Color(0, 0, 0));
        tablamodificar2.setForeground(new java.awt.Color(255, 255, 255));
        tablamodificar2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sala", "Pelicula", "Horario"
            }
        ));
        tablamodificar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablamodificar2MousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(tablamodificar2);

        modificarrr.add(jScrollPane5);
        jScrollPane5.setBounds(140, 230, 920, 90);

        jLabel8.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("INGRESE EL ASIENTO QUE DESEA");
        modificarrr.add(jLabel8);
        jLabel8.setBounds(130, 350, 350, 30);

        asientomodificar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30" }));
        asientomodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asientomodificarActionPerformed(evt);
            }
        });
        modificarrr.add(asientomodificar);
        asientomodificar.setBounds(250, 390, 100, 30);

        jButton6.setText("MODIFICAR BOLETO");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        modificarrr.add(jButton6);
        jButton6.setBounds(730, 370, 160, 40);

        canbol2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/MODBOL.png"))); // NOI18N
        canbol2.setContentAreaFilled(false);
        canbol2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        modificarrr.add(canbol2);
        canbol2.setBounds(470, 10, 230, 70);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondotaq.jpg"))); // NOI18N
        modificarrr.add(jLabel4);
        jLabel4.setBounds(0, 0, 1170, 560);

        taquillaaa2.add(modificarrr, "card2");

        taquillaaa.add(taquillaaa2);
        taquillaaa2.setBounds(0, 50, 1170, 440);

        padre.add(taquillaaa, "card4");

        peliculasss.setBackground(new java.awt.Color(255, 0, 0));
        peliculasss.setLayout(null);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(1170, 210));
        jPanel4.setLayout(null);

        jButton7.setText("REGISTRAR");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton7);
        jButton7.setBounds(340, 10, 90, 23);

        jButton8.setText("BUSCAR");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton8);
        jButton8.setBounds(480, 10, 85, 23);

        jButton9.setText("MOSTRAR");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton9);
        jButton9.setBounds(620, 10, 81, 23);

        jButton10.setText("ELIMINAR");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton10);
        jButton10.setBounds(750, 10, 81, 23);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondotaq.jpg"))); // NOI18N
        jPanel4.add(jLabel9);
        jLabel9.setBounds(0, 0, 1170, 490);

        peliculasss.add(jPanel4);
        jPanel4.setBounds(0, 0, 1170, 50);

        peliculasss2.setLayout(new java.awt.CardLayout());

        registrarrrpeli.setLayout(null);

        jLabel14.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/AÑAPELI.png"))); // NOI18N
        registrarrrpeli.add(jLabel14);
        jLabel14.setBounds(500, 20, 210, 70);

        jLabel15.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel15.setText("TITULO");
        registrarrrpeli.add(jLabel15);
        jLabel15.setBounds(390, 100, 90, 30);

        tituloregi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tituloregiActionPerformed(evt);
            }
        });
        registrarrrpeli.add(tituloregi);
        tituloregi.setBounds(480, 100, 256, 30);
        registrarrrpeli.add(generoregi);
        generoregi.setBounds(480, 140, 256, 30);

        jLabel16.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("GENERO");
        registrarrrpeli.add(jLabel16);
        jLabel16.setBounds(390, 140, 90, 30);
        registrarrrpeli.add(duracionregi);
        duracionregi.setBounds(480, 180, 256, 30);

        jLabel17.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText("DURACION");
        registrarrrpeli.add(jLabel17);
        jLabel17.setBounds(390, 180, 90, 30);
        registrarrrpeli.add(directorregi);
        directorregi.setBounds(480, 220, 256, 30);

        jLabel18.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel18.setText("DIRECTOR");
        registrarrrpeli.add(jLabel18);
        jLabel18.setBounds(390, 220, 90, 30);
        registrarrrpeli.add(repartoregi);
        repartoregi.setBounds(480, 260, 256, 30);

        jLabel19.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setText("REPARTO");
        registrarrrpeli.add(jLabel19);
        jLabel19.setBounds(390, 260, 90, 30);

        subirregi.setText("Subir");
        subirregi.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        subirregi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subirregiActionPerformed(evt);
            }
        });
        registrarrrpeli.add(subirregi);
        subirregi.setBounds(540, 300, 130, 30);

        jLabel20.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel20.setText("IMAGEN");
        registrarrrpeli.add(jLabel20);
        jLabel20.setBounds(390, 300, 170, 30);

        registrarrrpeli1.setText("REGISTRAR");
        registrarrrpeli1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        registrarrrpeli1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarrrpeli1ActionPerformed(evt);
            }
        });
        registrarrrpeli.add(registrarrrpeli1);
        registrarrrpeli1.setBounds(440, 350, 182, 41);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondotaq.jpg"))); // NOI18N
        registrarrrpeli.add(jLabel10);
        jLabel10.setBounds(0, 0, 1170, 490);

        peliculasss2.add(registrarrrpeli, "card5");

        buscarrrpeli.setLayout(null);

        jLabel22.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/BUSPELI.png"))); // NOI18N
        buscarrrpeli.add(jLabel22);
        jLabel22.setBounds(490, 20, 210, 70);

        jtitulo.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jtitulo.setForeground(new java.awt.Color(255, 255, 255));
        jtitulo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jtitulo.setText("TITULO");
        buscarrrpeli.add(jtitulo);
        jtitulo.setBounds(370, 100, 90, 30);
        buscarrrpeli.add(titulobus);
        titulobus.setBounds(470, 100, 256, 30);

        buscar.setText("BUSCAR");
        buscar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        buscarrrpeli.add(buscar);
        buscar.setBounds(340, 150, 182, 41);

        buscar1.setText("LIMPIAR DATOS");
        buscar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        buscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar1ActionPerformed(evt);
            }
        });
        buscarrrpeli.add(buscar1);
        buscar1.setBounds(560, 150, 182, 41);

        generobus.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        generobus.setForeground(new java.awt.Color(255, 255, 255));
        generobus.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        generobus.setText("GENERO:");
        buscarrrpeli.add(generobus);
        generobus.setBounds(540, 230, 410, 30);

        duracionbus.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        duracionbus.setForeground(new java.awt.Color(255, 255, 255));
        duracionbus.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        duracionbus.setText("DURACION:");
        buscarrrpeli.add(duracionbus);
        duracionbus.setBounds(540, 270, 410, 30);

        directorbus.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        directorbus.setForeground(new java.awt.Color(255, 255, 255));
        directorbus.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        directorbus.setText("DIRECTOR:");
        buscarrrpeli.add(directorbus);
        directorbus.setBounds(540, 310, 410, 30);

        repartobus.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        repartobus.setForeground(new java.awt.Color(255, 255, 255));
        repartobus.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        repartobus.setText("REPARTO:");
        buscarrrpeli.add(repartobus);
        repartobus.setBounds(540, 350, 410, 30);

        imagen2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        imagen2.setForeground(new java.awt.Color(255, 255, 255));
        imagen2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagen2.setText("IMAGEN");
        buscarrrpeli.add(imagen2);
        imagen2.setBounds(390, 210, 140, 190);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondotaq.jpg"))); // NOI18N
        buscarrrpeli.add(jLabel11);
        jLabel11.setBounds(0, 0, 1170, 490);

        peliculasss2.add(buscarrrpeli, "card4");

        mostrarrrpeli.setLayout(null);

        tablamos=new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tablamos.setBackground(new java.awt.Color(0, 0, 0));
        tablamos.setForeground(new java.awt.Color(255, 255, 255));
        tablamos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titulo", "Genero", "Duracion", "Director"
            }
        ));
        tablamos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablamosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablamos);

        mostrarrrpeli.add(jScrollPane1);
        jScrollPane1.setBounds(30, 90, 1060, 130);

        jLabel21.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/MOSPELI.png"))); // NOI18N
        mostrarrrpeli.add(jLabel21);
        jLabel21.setBounds(240, 10, 690, 70);

        imagen1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        imagen1.setForeground(new java.awt.Color(255, 255, 255));
        imagen1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagen1.setText("IMAGEN");
        mostrarrrpeli.add(imagen1);
        imagen1.setBounds(270, 230, 140, 190);

        gen1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        gen1.setForeground(new java.awt.Color(255, 255, 255));
        gen1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        mostrarrrpeli.add(gen1);
        gen1.setBounds(520, 250, 440, 30);

        genero1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        genero1.setForeground(new java.awt.Color(255, 255, 255));
        genero1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        genero1.setText("GENERO:");
        mostrarrrpeli.add(genero1);
        genero1.setBounds(420, 250, 90, 30);

        duracion1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        duracion1.setForeground(new java.awt.Color(255, 255, 255));
        duracion1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        duracion1.setText("DURACION:");
        mostrarrrpeli.add(duracion1);
        duracion1.setBounds(420, 290, 100, 30);

        dur1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        dur1.setForeground(new java.awt.Color(255, 255, 255));
        dur1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        mostrarrrpeli.add(dur1);
        dur1.setBounds(520, 290, 440, 30);

        dir1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        dir1.setForeground(new java.awt.Color(255, 255, 255));
        dir1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        mostrarrrpeli.add(dir1);
        dir1.setBounds(520, 330, 440, 30);

        director1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        director1.setForeground(new java.awt.Color(255, 255, 255));
        director1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        director1.setText("DIRECTOR:");
        mostrarrrpeli.add(director1);
        director1.setBounds(420, 330, 90, 30);

        reparto1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        reparto1.setForeground(new java.awt.Color(255, 255, 255));
        reparto1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        reparto1.setText("REPARTO:");
        mostrarrrpeli.add(reparto1);
        reparto1.setBounds(420, 370, 80, 30);

        repp1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        repp1.setForeground(new java.awt.Color(255, 255, 255));
        repp1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        mostrarrrpeli.add(repp1);
        repp1.setBounds(520, 370, 440, 30);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondotaq.jpg"))); // NOI18N
        mostrarrrpeli.add(jLabel12);
        jLabel12.setBounds(0, 0, 1170, 490);

        peliculasss2.add(mostrarrrpeli, "card3");

        eliminarrrpeli.setLayout(null);

        jButton11.setText("ELIMINAR TODAS LAS PELICULAS");
        jButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        eliminarrrpeli.add(jButton11);
        jButton11.setBounds(320, 130, 230, 41);

        jLabel23.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel23.setText("TITULO");
        eliminarrrpeli.add(jLabel23);
        jLabel23.setBounds(370, 90, 90, 30);

        jButton12.setText("ELIMINAR");
        jButton12.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        eliminarrrpeli.add(jButton12);
        jButton12.setBounds(580, 130, 140, 41);
        eliminarrrpeli.add(tituloelim);
        tituloelim.setBounds(470, 90, 256, 30);

        jLabel24.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/ELIPELI.png"))); // NOI18N
        eliminarrrpeli.add(jLabel24);
        jLabel24.setBounds(490, 10, 210, 70);

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondotaq.jpg"))); // NOI18N
        eliminarrrpeli.add(jLabel13);
        jLabel13.setBounds(0, 0, 1170, 490);

        peliculasss2.add(eliminarrrpeli, "card2");

        peliculasss.add(peliculasss2);
        peliculasss2.setBounds(0, 50, 1170, 440);

        padre.add(peliculasss, "card3");

        horariosss.setBackground(new java.awt.Color(153, 0, 255));
        horariosss.setLayout(null);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setPreferredSize(new java.awt.Dimension(1170, 210));
        jPanel5.setLayout(null);

        jButton13.setText("CREAR");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton13);
        jButton13.setBounds(340, 10, 90, 23);

        jButton14.setText("MODIFICAR");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton14);
        jButton14.setBounds(480, 10, 85, 23);

        jButton15.setText("MOSTRAR");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton15);
        jButton15.setBounds(620, 10, 81, 23);

        jButton16.setText("ELIMINAR");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton16);
        jButton16.setBounds(750, 10, 81, 23);

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondotaq.jpg"))); // NOI18N
        jPanel5.add(jLabel25);
        jLabel25.setBounds(0, 0, 1170, 490);

        horariosss.add(jPanel5);
        jPanel5.setBounds(0, 0, 1170, 50);

        horariosss2.setLayout(new java.awt.CardLayout());

        crearrrhor.setLayout(null);

        jLabel30.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/CREARHOR.png"))); // NOI18N
        crearrrhor.add(jLabel30);
        jLabel30.setBounds(490, 0, 210, 70);

        jLabel31.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("SELECCIONE PELICULA");
        crearrrhor.add(jLabel31);
        jLabel31.setBounds(170, 50, 330, 30);

        tablahora=new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tablahora.setBackground(new java.awt.Color(0, 0, 0));
        tablahora.setForeground(new java.awt.Color(255, 255, 255));
        tablahora.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titulo", "Genero", "Duracion", "Director"
            }
        ));
        tablahora.setDragEnabled(true);
        tablahora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablahoraMousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(tablahora);

        crearrrhor.add(jScrollPane6);
        jScrollPane6.setBounds(180, 80, 820, 240);

        jLabel32.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("INGRESE LA SALA DE LA PELICULA");
        crearrrhor.add(jLabel32);
        jLabel32.setBounds(190, 340, 330, 30);

        salahora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        salahora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salahoraActionPerformed(evt);
            }
        });
        crearrrhor.add(salahora);
        salahora.setBounds(540, 340, 100, 30);

        horahora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12:00:00", "15:00:00", "17:00:00", "21:00:00", "23:00:00" }));
        crearrrhor.add(horahora);
        horahora.setBounds(540, 380, 100, 30);

        jLabel33.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("INGRESE LA HORA DE INICIO DE LA PELICULA");
        crearrrhor.add(jLabel33);
        jLabel33.setBounds(180, 380, 350, 30);

        jButton17.setText("Crear");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        crearrrhor.add(jButton17);
        jButton17.setBounds(860, 370, 100, 40);

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondotaq.jpg"))); // NOI18N
        crearrrhor.add(jLabel26);
        jLabel26.setBounds(0, 0, 1170, 490);

        horariosss2.add(crearrrhor, "card5");

        modificarrrhor.setLayout(null);

        tablamodhor=new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tablamodhor.setBackground(new java.awt.Color(0, 0, 0));
        tablamodhor.setForeground(new java.awt.Color(255, 255, 255));
        tablamodhor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sala", "Pelicula", "Horario"
            }
        ));
        tablamodhor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablamodhorMousePressed(evt);
            }
        });
        jScrollPane7.setViewportView(tablamodhor);

        modificarrrhor.add(jScrollPane7);
        jScrollPane7.setBounds(190, 70, 799, 260);

        jLabel34.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/MODHOR.png"))); // NOI18N
        modificarrrhor.add(jLabel34);
        jLabel34.setBounds(490, 0, 210, 60);

        jLabel35.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("INGRESE LA SALA DE LA PELICULA");
        modificarrrhor.add(jLabel35);
        jLabel35.setBounds(200, 440, 330, 23);

        salamodhor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        salamodhor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salamodhorActionPerformed(evt);
            }
        });
        modificarrrhor.add(salamodhor);
        salamodhor.setBounds(540, 340, 100, 30);

        horamodhora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12:00:00", "15:00:00", "17:00:00", "21:00:00", "23:00:00" }));
        modificarrrhor.add(horamodhora);
        horamodhora.setBounds(540, 380, 100, 30);

        jLabel36.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("INGRESE LA HORA DE INICIO DE LA PELICULA");
        modificarrrhor.add(jLabel36);
        jLabel36.setBounds(190, 480, 350, 23);

        jLabel37.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("INGRESE LA SALA DE LA PELICULA");
        modificarrrhor.add(jLabel37);
        jLabel37.setBounds(200, 340, 330, 30);

        jLabel38.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("INGRESE LA HORA DE INICIO DE LA PELICULA");
        modificarrrhor.add(jLabel38);
        jLabel38.setBounds(190, 380, 350, 30);

        modif.setText("Modificar Horario");
        modif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifActionPerformed(evt);
            }
        });
        modificarrrhor.add(modif);
        modif.setBounds(840, 350, 138, 40);

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondotaq.jpg"))); // NOI18N
        modificarrrhor.add(jLabel27);
        jLabel27.setBounds(0, 0, 1170, 490);

        horariosss2.add(modificarrrhor, "card4");

        mostrarrrhor.setLayout(null);

        jLabel39.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/DISPHOR.png"))); // NOI18N
        mostrarrrhor.add(jLabel39);
        jLabel39.setBounds(490, 0, 210, 70);

        tablamoshor=new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tablamoshor.setBackground(new java.awt.Color(0, 0, 0));
        tablamoshor.setForeground(new java.awt.Color(255, 255, 255));
        tablamoshor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sala", "Pelicula", "Horario"
            }
        ));
        tablamoshor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablamoshorMousePressed(evt);
            }
        });
        jScrollPane8.setViewportView(tablamoshor);

        mostrarrrhor.add(jScrollPane8);
        jScrollPane8.setBounds(170, 80, 860, 320);

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondotaq.jpg"))); // NOI18N
        mostrarrrhor.add(jLabel28);
        jLabel28.setBounds(0, 0, 1170, 490);

        horariosss2.add(mostrarrrhor, "card3");

        eliminarrrhor.setLayout(null);

        tablaelihor=new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tablaelihor.setBackground(new java.awt.Color(0, 0, 0));
        tablaelihor.setForeground(new java.awt.Color(255, 255, 255));
        tablaelihor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sala", "Pelicula", "Horario"
            }
        ));
        tablaelihor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaelihorMousePressed(evt);
            }
        });
        jScrollPane9.setViewportView(tablaelihor);

        eliminarrrhor.add(jScrollPane9);
        jScrollPane9.setBounds(190, 80, 800, 260);

        elim.setText("Eliminar Horario");
        elim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elimActionPerformed(evt);
            }
        });
        eliminarrrhor.add(elim);
        elim.setBounds(540, 360, 138, 40);

        jLabel40.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/ELIHOR.png"))); // NOI18N
        eliminarrrhor.add(jLabel40);
        jLabel40.setBounds(490, 10, 210, 70);

        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondotaq.jpg"))); // NOI18N
        eliminarrrhor.add(jLabel29);
        jLabel29.setBounds(0, 0, 1170, 490);

        horariosss2.add(eliminarrrhor, "card2");

        horariosss.add(horariosss2);
        horariosss2.setBounds(0, 50, 1170, 440);

        padre.add(horariosss, "card2");

        usuariosss.setLayout(null);

        nombreusu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreusuActionPerformed(evt);
            }
        });
        usuariosss.add(nombreusu);
        nombreusu.setBounds(150, 90, 256, 30);

        jLabel42.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("NOMBRE");
        jLabel42.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        usuariosss.add(jLabel42);
        jLabel42.setBounds(60, 90, 90, 30);
        usuariosss.add(apellidousu);
        apellidousu.setBounds(150, 130, 256, 30);

        jLabel43.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("APELLIDO");
        jLabel43.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        usuariosss.add(jLabel43);
        jLabel43.setBounds(60, 130, 90, 30);
        usuariosss.add(telefonousu);
        telefonousu.setBounds(150, 170, 256, 30);

        jLabel44.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("TELEFONO");
        jLabel44.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        usuariosss.add(jLabel44);
        jLabel44.setBounds(60, 170, 90, 30);
        usuariosss.add(correousu);
        correousu.setBounds(150, 210, 256, 30);

        jLabel45.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel45.setText("CORREO");
        jLabel45.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        usuariosss.add(jLabel45);
        jLabel45.setBounds(60, 210, 90, 30);
        usuariosss.add(direccionusu);
        direccionusu.setBounds(150, 290, 256, 30);

        jLabel46.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel46.setText("USUARIO");
        jLabel46.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        usuariosss.add(jLabel46);
        jLabel46.setBounds(60, 250, 90, 30);

        registrar.setText("REGISTRAR");
        registrar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarActionPerformed(evt);
            }
        });
        usuariosss.add(registrar);
        registrar.setBounds(110, 370, 182, 41);

        tablausu=new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        tablausu.setBackground(new java.awt.Color(0, 0, 0));
        tablausu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tablausu.setForeground(new java.awt.Color(255, 255, 255));
        tablausu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablausu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tablausu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablausuMousePressed(evt);
            }
        });
        jScrollPane10.setViewportView(tablausu);

        usuariosss.add(jScrollPane10);
        jScrollPane10.setBounds(460, 90, 680, 315);

        bor.setText("BORRAR");
        bor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borActionPerformed(evt);
            }
        });
        usuariosss.add(bor);
        bor.setBounds(730, 430, 120, 40);

        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/AÑADIRUSUARIO.png"))); // NOI18N
        usuariosss.add(jLabel49);
        jLabel49.setBounds(490, 0, 200, 80);

        jLabel50.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 255, 255));
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("DIRECCION");
        jLabel50.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        usuariosss.add(jLabel50);
        jLabel50.setBounds(60, 290, 90, 30);
        usuariosss.add(usuariousu);
        usuariousu.setBounds(150, 250, 256, 30);

        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel47.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondotaq.jpg"))); // NOI18N
        usuariosss.add(jLabel47);
        jLabel47.setBounds(4, -6, 1180, 540);

        padre.add(usuariosss, "card6");

        getContentPane().add(padre);
        padre.setBounds(0, 130, 1170, 510);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void z4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_z4ActionPerformed
        try{
        usuario = JOptionPane.showInputDialog(null, "Ingrese su usuario", "Usuario", 1).toLowerCase();
        while (usuario.equals("")||usuario==null) {
            if (usuario.equals("")||usuario==null) {
                JOptionPane.showMessageDialog(null, "No puede dejar espacios en blanco");
            }
            usuario = JOptionPane.showInputDialog(null, "Ingrese su usuario", "Usuario", 1).toLowerCase();
        }
            boolean existe = false;
            String sql = "SELECT * FROM usuarioss;";
            con = DriverManager.getConnection(url, user, pass);
            sta = con.createStatement();
            registro = sta.executeQuery(sql);
            while (registro.next()) {
                if (usuario.equals(registro.getString(8))) {
                    JOptionPane.showMessageDialog(null, "Usted es usuario de este cine");
                    nombre = registro.getString(2);
                    apellido = registro.getString(3);
                    puntos = Integer.parseInt(registro.getString(7));
                    usuarioexistente = true;
                    existe = true;
                    break;
                }
            }
            if (existe == false) {
                usuarioexistente = false;
                usuario = null;
                JOptionPane.showMessageDialog(null, "Usted no es usuario de este cine");
                nombre = JOptionPane.showInputDialog(null, "Ingrese su nombre", "Usuario", 1).toLowerCase();
                apellido = JOptionPane.showInputDialog(null, "Ingrese su apellido", "Usuario", 1).toLowerCase();
                while (nombre.equals("") || apellido.equals("")) {
                    if (nombre.equals("") || apellido.equals("")) {
                        JOptionPane.showMessageDialog(null, "No puede dejar espacios en blanco");
                    }
                    nombre = JOptionPane.showInputDialog(null, "Ingrese su nombre", "Usuario", 1).toLowerCase();
                    apellido = JOptionPane.showInputDialog(null, "Ingrese su apellido", "Usuario", 1).toLowerCase();
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error! " + ex);
        }
        mostrarcancelar();
        mostrarboleto();
        mostrarhorario();
        padre.removeAll();
        padre.add(taquillaaa);
        padre.repaint();
        padre.revalidate();
        try {
            con = DriverManager.getConnection(url, user, pass);
            sta = con.createStatement();
            String sql = "SELECT * FROM horarios ORDER BY Sala ASC;";
            DefaultTableModel modelo = new DefaultTableModel();
            ResultSet rst = sta.executeQuery(sql);//Servira para obtener los registro de una tabla

            //Se crea objeto para despues obtener el numero de columnas que tiene la BD
            ResultSetMetaData rsMd = rst.getMetaData();
            int numeroColumnas = rsMd.getColumnCount();//Se almacena el numero de columnas en una variable int

            this.tablacomprar.setModel(modelo);//El objeto anteriormente creado, se enlasa con el elemento JTable del layout

            //Con este ciclo se obtienen las columnas y se van insertando en la tabla del layout
            for (int i = 1; i <= numeroColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            //El ciclo while servirá para mostrar los registros de la tabla
            while (rst.next()) {
                Object[] fila = new Object[numeroColumnas];
                for (int i = 0; i < numeroColumnas; i++) {
                    fila[i] = rst.getObject(i + 1);//Se encuentran los registros
                }
                modelo.addRow(fila);//Y son añadidos al elemento JTable para ser mostrados en el layout
            }

            sta.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }
    }//GEN-LAST:event_z4ActionPerformed

    private void z1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_z1ActionPerformed
        nsal.setText("");
        nhor.setText("");
        asientosdesocupados();
        padre.removeAll();
        padre.add(peliculasss);
        padre.repaint();
        padre.revalidate();
    }//GEN-LAST:event_z1ActionPerformed

    private void z2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_z2ActionPerformed
        nsal.setText("");
        nhor.setText("");
        asientosdesocupados();
        mostrarhorario();
        mostrarhorarioeliminar();
        try {
            con = DriverManager.getConnection(url, user, pass);
            sta = con.createStatement();
            String sql = "SELECT * FROM peliculas;";
            DefaultTableModel modelo = new DefaultTableModel();
            ResultSet rst = sta.executeQuery(sql);//Servira para obtener los registro de una tabla

            //Se crea objeto para despues obtener el numero de columnas que tiene la BD
            ResultSetMetaData rsMd = rst.getMetaData();
            int numeroColumnas = rsMd.getColumnCount();//Se almacena el numero de columnas en una variable int

            this.tablahora.setModel(modelo);//El objeto anteriormente creado, se enlasa con el elemento JTable del layout

            //Con este ciclo se obtienen las columnas y se van insertando en la tabla del layout
            for (int i = 1; i <= numeroColumnas - 1; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            //El ciclo while servirá para mostrar los registros de la tabla
            while (rst.next()) {
                Object[] fila = new Object[numeroColumnas];
                for (int i = 0; i < numeroColumnas; i++) {
                    fila[i] = rst.getObject(i + 1);//Se encuentran los registros
                }
                modelo.addRow(fila);//Y son añadidos al elemento JTable para ser mostrados en el layout
            }

            sta.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }
        padre.removeAll();
        padre.add(horariosss);
        padre.repaint();
        padre.revalidate();
    }//GEN-LAST:event_z2ActionPerformed

    private void tablacomprarcomprarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablacomprarcomprarMousePressed
        if (evt.getClickCount() == 1) {
            asientosdesocupados();
            pelicula = tablacomprar.getValueAt(tablacomprar.getSelectedRow(), 1).toString();
            sala = tablacomprar.getValueAt(tablacomprar.getSelectedRow(), 0).toString();
            horario = tablacomprar.getValueAt(tablacomprar.getSelectedRow(), 2).toString();
            asientosocupados();
            nsal.setText(sala);
            nhor.setText(horario);
            try {
                String query = "SELECT * FROM peliculas;";
                con = DriverManager.getConnection(url, user, pass);
                sta = con.createStatement();
                registro = sta.executeQuery(query);
                while (registro.next()) {
                    if (pelicula.equals(registro.getString(1))) {
                        gen.setText(registro.getString(2));
                        dur.setText(registro.getString(3));
                        dir.setText(registro.getString(4));
                        repp.setText(registro.getString(6));
                        String img = registro.getString(7);
                        icono = new ImageIcon(img);
                        Icon fondo1 = new ImageIcon(icono.getImage().getScaledInstance(imagen.getWidth(), imagen.getHeight(), Image.SCALE_DEFAULT));
                        imagen.setIcon(fondo1);
                    }

                }
                String sql = "select imagen from peliculas where titulo='" + pelicula + "';";
                registro = sta.executeQuery(sql);
                ImageIcon ii = null;
                InputStream is = null;
                while (registro.next()) {

                    /*byte[] ima = registro.getBytes("imagen");
                    ByteArrayInputStream bis = new ByteArrayInputStream(ima);
                    Iterator readers = ImageIO.getImageReadersByFormatName("jpg");
                    ImageReader reader = (ImageReader) readers.next();
                    Object source = bis; // File or InputStream
                    ImageInputStream iis = ImageIO.createImageInputStream(source);
                    reader.setInput(iis, true);
                    ImageReadParam param = reader.getDefaultReadParam();
                    Image imag = reader.read(0, param);
                    Icon icon = new ImageIcon(imag);
                    imagen.setIcon(icon);
                    /*Blob blo = registro.getBlob("imagen");
                    Image img = ImageIO.read(blo.getBinaryStream());
                    icono = new ImageIcon(img);*/
                }
                sta.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
            }
        }
    }//GEN-LAST:event_tablacomprarcomprarMousePressed

    private void asientocomprarrrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asientocomprarrrActionPerformed

    }//GEN-LAST:event_asientocomprarrrActionPerformed
public void asientosocupados(){
        try{
        String sql = "SELECT * FROM boletoss WHERE sala=" + sala + " AND horario='" + horario + "' order by asiento;";
            String lleno = "SELECT COUNT(asiento) FROM boletoss WHERE sala=" + sala + " AND horario='" + horario + "' order by asiento;";
            con = DriverManager.getConnection(url, user, pass);
            sta = con.createStatement();
            registro = sta.executeQuery(sql);
            while(registro.next()){
                int asiento=Integer.parseInt(registro.getString(6));
                if(asiento==1){
                    asiento1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==2){
                    asiento2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==3){
                    asiento3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==4){
                    asiento4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==5){
                    asiento5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==6){
                    asiento6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==7){
                    asiento7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==8){
                    asiento8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==9){
                    asiento9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==10){
                    asiento10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==11){
                    asiento11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==12){
                    asiento12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==13){
                    asiento13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==14){
                    asiento14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==15){
                    asiento15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==16){
                    asiento16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==17){
                    asiento17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==18){
                    asiento18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==19){
                    asiento19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==20){
                    asiento20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==21){
                    asiento21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==22){
                    asiento22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==23){
                    asiento23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==24){
                    asiento24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==25){
                    asiento25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==26){
                    asiento26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==27){
                    asiento27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==28){
                    asiento28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==29){
                    asiento29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }else if(asiento==30){
                    asiento30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientoocupado.png")));
                }
            }
        } catch (SQLException ex) {
            
        }
    }
public void asientosdesocupados() {
        asiento1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));
        asiento30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/asientodesocupado.png")));

    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            if (pelicula == null) {
                JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila");
            } else {
                int cont = 0;
                boolean existe = false;
                String sql = "SELECT * FROM boletoss;";
                String lleno = "SELECT COUNT(asiento) FROM boletoss WHERE sala=" + sala + " AND horario='" + horario + "';";
                con = DriverManager.getConnection(url, user, pass);
                sta = con.createStatement();
                registro = sta.executeQuery(sql);
                /*contador=sta.executeQuery(lleno);
                while(contador.next()){
                    if(cont>=30){
                        existe=true;
                        JOptionPane.showMessageDialog(null, "Los asientos estan llenos");
                        contador.close();
                        break;
                    }
                    cont++;
                }*/
                while (registro.next() && existe == false) {
                    if (sala.equals(registro.getString(4)) && horario.equals(registro.getString(5)) && asientocomprarrr.getSelectedItem().toString().equals(registro.getString(6))) {
                        JOptionPane.showMessageDialog(null, "Este asiento ya esta ocupado!");
                        existe = true;
                    }
                }
                if (existe == false) {

                    if (usuarioexistente == false) {
                        int dinero = Integer.parseInt(JOptionPane.showInputDialog(null, "Dinero a pagar"));
                        while (dinero < 51) {
                            JOptionPane.showMessageDialog(null, "No puede pagar con esta cantidad");
                            dinero = Integer.parseInt(JOptionPane.showInputDialog(null, "Dinero a pagar"));
                        }
                        String insertarsql = "insert into boletoss values('" + nombre + "','" + apellido + "','" + pelicula + "'," + sala + ",'" + horario + "','" + asientocomprarrr.getSelectedItem().toString() + "','" + null + "');";
                        sta.execute(insertarsql);
                        sta.close();
                        asientosocupados();
                        JOptionPane.showMessageDialog(null, "Boleto comprado con exito\nCliente: " + nombre + " " + apellido + "\nPelicula: " + pelicula + "\nSala: " + sala + "\nHorario: " + horario + "\nAsiento: " + asientocomprarrr.getSelectedItem() + "\nTotal a pagar $51!\nSu cambio es: " + String.valueOf(dinero - 51));
                    } else {
                        String sqll = "SELECT * FROM usuarioss;";
                        con = DriverManager.getConnection(url, user, pass);
                        sta = con.createStatement();
                        registro = sta.executeQuery(sqll);
                        while (registro.next()) {
                            if (usuariousu.getText().equals(registro.getString(8))) {
                                puntos = Integer.parseInt(registro.getString(7));
                            }
                        }
                        int opc = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese con que desea pagar:\n1.-Dinero\n2.-Puntos"));
                        while (opc != 1 && opc != 2) {
                            JOptionPane.showMessageDialog(null, "No es una opcion valida");
                            opc = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese con que desea pagar:\n1.-Dinero\n2.-Puntos"));
                        }
                        if (opc == 1) {
                            int dinero = Integer.parseInt(JOptionPane.showInputDialog(null, "Dinero a pagar"));
                            while (dinero < 51) {
                                JOptionPane.showMessageDialog(null, "No puede pagar con esta cantidad");
                                dinero = Integer.parseInt(JOptionPane.showInputDialog(null, "Dinero a pagar"));
                            }
                            String sequel = "select * from usuarioss";
                            registro = sta.executeQuery(sequel);
                            while (registro.next()) {
                                if (usuario.equals(registro.getString(8))) {
                                    nombre = registro.getString(2);
                                    apellido = registro.getString(3);
                                }
                            }
                            String insertarsql = "insert into boletoss values('" + nombre + "','" + apellido + "','" + pelicula + "'," + sala + ",'" + horario + "','" + asientocomprarrr.getSelectedItem().toString() + "','" + usuario + "');";
                            sta.execute(insertarsql);
                            puntos=puntos+10;
                            String upd = "UPDATE usuarioss SET puntos=" + puntos + " WHERE usuario='" + usuario + "';";
                            sta.execute(upd);
                            sta.close();
                            asientosocupados();
                            JOptionPane.showMessageDialog(null, "Boleto comprado con exito\nCliente: " + nombre + " " + apellido + "\nPelicula: " + pelicula + "\nSala: " + sala + "\nHorario: " + horario + "\nAsiento: " + asientocomprarrr.getSelectedItem() + "\nTotal a pagar $51!\nSu cambio es: " + String.valueOf(dinero - 51)+"\nSus puntos actuales son: "+puntos);
                        } else {
                            if (puntos >= 51) {
                                String sequel = "select * from usuarioss";
                                registro = sta.executeQuery(sequel);
                                while (registro.next()) {
                                    if (usuario.equals(registro.getString(8))) {
                                        nombre = registro.getString(2);
                                        apellido = registro.getString(3);
                                    }
                                }
                                puntos = puntos - 51;
                                String insertarsql = "insert into boletoss values('" + nombre + "','" + apellido + "','" + pelicula + "'," + sala + ",'" + horario + "','" + asientocomprarrr.getSelectedItem().toString() + "','" + usuario + "');";
                                sta.execute(insertarsql);

                                String upd = "UPDATE usuarioss SET puntos=" + puntos + " WHERE usuario='" + usuario + "';";
                                sta.execute(upd);
                                sta.close();
                                asientosocupados();
                                JOptionPane.showMessageDialog(null, "Boleto comprado con exito\nCliente: " + nombre + " " + apellido + "\nPelicula: " + pelicula + "\nSala: " + sala + "\nHorario: " + horario + "\nAsiento: " + asientocomprarrr.getSelectedItem() + "\nTotal a pagar en puntos 51!\nSus puntos restantes son: " + String.valueOf(puntos));
                            }else{
                                JOptionPane.showMessageDialog(null, "No tiene suficientes puntos para comprar el boleto!");
                            }
                        }
                    }

                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        nsal.setText("");
        nhor.setText("");
        asientosdesocupados();
        taquillaaa2.removeAll();
        taquillaaa2.add(cancelarrr);
        taquillaaa2.repaint();
        taquillaaa2.revalidate();
        mostrarcancelar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        taquillaaa2.removeAll();
        taquillaaa2.add(comprarrr);
        taquillaaa2.repaint();
        taquillaaa2.revalidate();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        nsal.setText("");
        nhor.setText("");
        asientosdesocupados();
        taquillaaa2.removeAll();
        taquillaaa2.add(modificarrr);
        taquillaaa2.repaint();
        taquillaaa2.revalidate();
        mostrarboleto();
        mostrarhorario();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tablacancelarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablacancelarMousePressed
        pelicula = null;
        sala = null;
        horario = null;
        asiento = null;
        if (evt.getClickCount() == 1) {
            pelicula = tablacancelar.getValueAt(tablacancelar.getSelectedRow(), 2).toString();
            sala = tablacancelar.getValueAt(tablacancelar.getSelectedRow(), 3).toString();
            horario = tablacancelar.getValueAt(tablacancelar.getSelectedRow(), 4).toString();
            asiento = tablacancelar.getValueAt(tablacancelar.getSelectedRow(), 5).toString();
        }
    }//GEN-LAST:event_tablacancelarMousePressed
    public void mostrarcancelar() {
        try {
            con = DriverManager.getConnection(url, user, pass);
            sta = con.createStatement();
            if (usuarioexistente == false) {
                ssqqll = "SELECT * FROM boletoss WHERE nombre='" + nombre + "' AND apellidos='" + apellido + "' AND usuario='" + null + "';";
            } else {
                ssqqll = "SELECT * FROM boletoss WHERE usuario='" + usuario + "';";
            }

            DefaultTableModel modelo = new DefaultTableModel();
            ResultSet rst = sta.executeQuery(ssqqll);//Servira para obtener los registro de una tabla
            //Se crea objeto para despues obtener el numero de columnas que tiene la BD
            ResultSetMetaData rsMd = rst.getMetaData();
            int numeroColumnas = rsMd.getColumnCount();//Se almacena el numero de columnas en una variable int

            this.tablacancelar.setModel(modelo);//El objeto anteriormente creado, se enlasa con el elemento JTable del layout

            //Con este ciclo se obtienen las columnas y se van insertando en la tabla del layout
            for (int i = 1; i <= numeroColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            //El ciclo while servirá para mostrar los registros de la tabla
            while (rst.next()) {
                Object[] fila = new Object[numeroColumnas];
                for (int i = 0; i < numeroColumnas; i++) {
                    fila[i] = rst.getObject(i + 1);//Se encuentran los registros
                }
                modelo.addRow(fila);//Y son añadidos al elemento JTable para ser mostrados en el layout
            }

            sta.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }
    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            if (pelicula == null) {
                JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila");
            } else {
                boolean existe = false;
                String sql = "SELECT * FROM BOLETOSS";
                con = DriverManager.getConnection(url, user, pass);
                sta = con.createStatement();
                registro = sta.executeQuery(sql);
                while (registro.next()) {
                    if (sala.equals(registro.getString(4)) && horario.equals(registro.getString(5)) && asiento.equals(registro.getString(6))) {
                        String sqleliminar = "delete from boletoss where sala=" + sala + " AND horario='" + horario + "' AND asiento=" + asiento + ";";
                        sta.execute(sqleliminar);
                        existe = true;
                        mostrarcancelar();
                        asientosdesocupados();
                        JOptionPane.showMessageDialog(null, "Ha cancelado el boleto con exito!");
                        sta.close();
                        break;
                    }
                }
                if (existe == false) {
                    JOptionPane.showMessageDialog(null, "No se ha podido cancelar el boleto");
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tablamodificar1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablamodificar1MousePressed
        if (evt.getClickCount() == 1) {
            nombreborrar = tablamodificar1.getValueAt(tablamodificar1.getSelectedRow(), 0).toString();
            apellidoborrar = tablamodificar1.getValueAt(tablamodificar1.getSelectedRow(), 1).toString();
            salaborrar = tablamodificar1.getValueAt(tablamodificar1.getSelectedRow(), 3).toString();
            horarioborrar = tablamodificar1.getValueAt(tablamodificar1.getSelectedRow(), 4).toString();
            asientoborrar = tablamodificar1.getValueAt(tablamodificar1.getSelectedRow(), 5).toString();
            nombre = nombreborrar;
            apellido = apellidoborrar;
        }
    }//GEN-LAST:event_tablamodificar1MousePressed

    private void tablamodificar2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablamodificar2MousePressed
        salanuevo = tablamodificar2.getValueAt(tablamodificar2.getSelectedRow(), 0).toString();
        horarionuevo = tablamodificar2.getValueAt(tablamodificar2.getSelectedRow(), 2).toString();
        peliculanuevo = tablamodificar2.getValueAt(tablamodificar2.getSelectedRow(), 1).toString();
    }//GEN-LAST:event_tablamodificar2MousePressed

    private void asientomodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asientomodificarActionPerformed

    }//GEN-LAST:event_asientomodificarActionPerformed
    public void mostrarboleto() {
        try {
            con = DriverManager.getConnection(url, user, pass);
            sta = con.createStatement();
            if (usuarioexistente == false) {
                ssqqll = "SELECT * FROM boletoss WHERE nombre='" + nombre + "' AND apellidos='" + apellido + "' AND usuario='" + null + "';";
            } else {
                ssqqll = "SELECT * FROM boletoss WHERE usuario='" + usuario + "';";
            }
            DefaultTableModel modelo = new DefaultTableModel();
            ResultSet rst = sta.executeQuery(ssqqll);//Servira para obtener los registro de una tabla

            //Se crea objeto para despues obtener el numero de columnas que tiene la BD
            ResultSetMetaData rsMd = rst.getMetaData();
            int numeroColumnas = rsMd.getColumnCount();//Se almacena el numero de columnas en una variable int

            this.tablamodificar1.setModel(modelo);//El objeto anteriormente creado, se enlasa con el elemento JTable del layout

            //Con este ciclo se obtienen las columnas y se van insertando en la tabla del layout
            for (int i = 1; i <= numeroColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            //El ciclo while servirá para mostrar los registros de la tabla
            while (rst.next()) {
                Object[] fila = new Object[numeroColumnas];
                for (int i = 0; i < numeroColumnas; i++) {
                    fila[i] = rst.getObject(i + 1);//Se encuentran los registros
                }
                modelo.addRow(fila);//Y son añadidos al elemento JTable para ser mostrados en el layout
            }
            sta.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }
    }

    public void mostrarhorario() {
        try {
            con = DriverManager.getConnection(url, user, pass);
            sta = con.createStatement();
            String sql = "SELECT * FROM horarios ORDER BY Sala ASC;";
            DefaultTableModel modelo = new DefaultTableModel();
            ResultSet rst = sta.executeQuery(sql);//Servira para obtener los registro de una tabla

            //Se crea objeto para despues obtener el numero de columnas que tiene la BD
            ResultSetMetaData rsMd = rst.getMetaData();
            int numeroColumnas = rsMd.getColumnCount();//Se almacena el numero de columnas en una variable int

            this.tablamodificar2.setModel(modelo);//El objeto anteriormente creado, se enlasa con el elemento JTable del layout

            //Con este ciclo se obtienen las columnas y se van insertando en la tabla del layout
            for (int i = 1; i <= numeroColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            //El ciclo while servirá para mostrar los registros de la tabla
            while (rst.next()) {
                Object[] fila = new Object[numeroColumnas];
                for (int i = 0; i < numeroColumnas; i++) {
                    fila[i] = rst.getObject(i + 1);//Se encuentran los registros
                }
                modelo.addRow(fila);//Y son añadidos al elemento JTable para ser mostrados en el layout
            }

            sta.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }
    }
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {

            if (salaborrar == null || salanuevo == null) {
                JOptionPane.showMessageDialog(null, "Seleccione el horario a modificar y su respectivo cambio para continuar!");
            } else {
                boolean existe = false;
                con = DriverManager.getConnection(url, user, pass);
                String sql = "SELECT * FROM boletoss;";
                sta = con.createStatement();
                registro = sta.executeQuery(sql);
                while (registro.next()) {
                    if (salanuevo.equals(registro.getString(4)) && horarionuevo.equals(registro.getString(5)) && asientomodificar.getSelectedItem().toString().equals(registro.getString(6))) {
                        JOptionPane.showMessageDialog(null, "No se puede realizar el cambio, a este lugar en especifico!");
                        existe = true;
                    }
                }
                if (existe == false) {
                    String insertarsql = "insert into boletoss values('" + nombre + "','" + apellido + "','" + peliculanuevo + "'," + salanuevo + ",'" + horarionuevo + "','" + asientomodificar.getSelectedItem().toString() + "','" + usuario + "');";
                    sta.execute(insertarsql);
                    String sqleliminar = "delete from boletoss where sala=" + salaborrar + " AND horario='" + horarioborrar + "' AND asiento=" + asientoborrar + ";";
                    sta.execute(sqleliminar);
                    sta.close();
                    mostrarhorario();
                    mostrarboleto();
                    asientosdesocupados();
                    JOptionPane.showMessageDialog(null, "Ha modificado el boleto con exito!");
                    salaborrar = null;
                    salanuevo = null;
                }
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        peliculasss2.removeAll();
        peliculasss2.add(registrarrrpeli);
        peliculasss2.repaint();
        peliculasss2.revalidate();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        peliculasss2.removeAll();
        peliculasss2.add(buscarrrpeli);
        peliculasss2.repaint();
        peliculasss2.revalidate();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        try {
            con = DriverManager.getConnection(url, user, pass);
            sta = con.createStatement();
            String sql = "SELECT * FROM peliculas;";
            DefaultTableModel modelo = new DefaultTableModel();
            ResultSet rst = sta.executeQuery(sql);//Servira para obtener los registro de una tabla

            //Se crea objeto para despues obtener el numero de columnas que tiene la BD
            ResultSetMetaData rsMd = rst.getMetaData();
            int numeroColumnas = rsMd.getColumnCount();//Se almacena el numero de columnas en una variable int

            this.tablamos.setModel(modelo);//El objeto anteriormente creado, se enlasa con el elemento JTable del layout

            //Con este ciclo se obtienen las columnas y se van insertando en la tabla del layout
            for (int i = 1; i <= numeroColumnas - 1; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            //El ciclo while servirá para mostrar los registros de la tabla
            while (rst.next()) {
                Object[] fila = new Object[numeroColumnas];
                for (int i = 0; i < numeroColumnas; i++) {
                    fila[i] = rst.getObject(i + 1);//Se encuentran los registros
                }
                modelo.addRow(fila);//Y son añadidos al elemento JTable para ser mostrados en el layout
            }

            sta.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }
        peliculasss2.removeAll();
        peliculasss2.add(mostrarrrpeli);
        peliculasss2.repaint();
        peliculasss2.revalidate();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        peliculasss2.removeAll();
        peliculasss2.add(eliminarrrpeli);
        peliculasss2.repaint();
        peliculasss2.revalidate();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void tituloregiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tituloregiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tituloregiActionPerformed

    private void subirregiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subirregiActionPerformed
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter fil = new FileNameExtensionFilter("JPG", "jpg", "png");
        fc.setFileFilter(fil);
        fc.setMultiSelectionEnabled(false);
        int r = fc.showOpenDialog(this);
        if (r == JFileChooser.APPROVE_OPTION) {
            ruta = fc.getSelectedFile().getAbsolutePath();
            ruta = ruta.replace("\\", "\\\\");
        }
    }//GEN-LAST:event_subirregiActionPerformed

    private void registrarrrpeli1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarrrpeli1ActionPerformed
        if ((tituloregi.getText().toLowerCase().equals("") && generoregi.getText().equals("") && duracionregi.getText().equals("") && directorregi.getText().equals("") && repartoregi.getText().equals(""))
                || tituloregi.getText().toLowerCase().equals("") || generoregi.getText().equals("") || duracionregi.getText().equals("") || directorregi.getText().equals("") || repartoregi.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Los campos deben de estar llenos para registrar la pelicula!");
        } else {
            if (peli.registrarpelicula(tituloregi.getText().toLowerCase(), generoregi.getText(), duracionregi.getText(), directorregi.getText(), repartoregi.getText(), ruta) == true) {
            } else {
                tituloregi.setText("");
                generoregi.setText("");
                duracionregi.setText("");
                directorregi.setText("");
                repartoregi.setText("");
                ruta = null;
            }
        }
    }//GEN-LAST:event_registrarrrpeli1ActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        try {
            if (titulobus.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese un nombre para buscar la pelicula!");
            } else {
                boolean encontrado = false;
                con = DriverManager.getConnection(url, user, pass);
                sta = con.createStatement();
                String query = "SELECT * FROM peliculas;";
                registro = sta.executeQuery(query);
                int cont = 1;
                while (registro.next()) {
                    if (titulobus.getText().toLowerCase().equals(registro.getString(cont))) {
                        generobus.setText("GENERO: " + registro.getString(2));
                        duracionbus.setText("DURACION: " + registro.getString(3));
                        directorbus.setText("DIRECTOR: " + registro.getString(4));
                        repartobus.setText("REPARTO: " + registro.getString(6));
                        String img = registro.getString(7);
                        icono = new ImageIcon(img);
                        Icon fondo1 = new ImageIcon(icono.getImage().getScaledInstance(imagen2.getWidth(), imagen2.getHeight(), Image.SCALE_DEFAULT));
                        imagen2.setIcon(fondo1);
                        encontrado = true;
                        JOptionPane.showMessageDialog(null, "Los datos de la pelicula han sido mostrados con exito!");
                        break;
                    }
                }
                if (encontrado == false) {
                    JOptionPane.showMessageDialog(null, "No se ha encontrado una pelicula con ese nombre, intente de nuevo por favor");
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }

    }//GEN-LAST:event_buscarActionPerformed

    private void buscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar1ActionPerformed
        titulobus.setText("");
        generobus.setText("GENERO: ");
        duracionbus.setText("DURACION: ");
        directorbus.setText("DIRECTOR: ");
        repartobus.setText("REPARTO: ");
    }//GEN-LAST:event_buscar1ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if (JOptionPane.showConfirmDialog(null, "¿Esta seguro de querer eliminar todas las peliculas?") == 0) {
            peli.eliminartodas();
            tituloelim.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Accion cancelada!");
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        if (tituloelim.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo no puede estar vacío!");
        } else {
            if (JOptionPane.showConfirmDialog(null, "¿Esta seguro de querer eliminar la pelicula?") == 0) {
                peli.eliminarpelicula(tituloelim.getText().toLowerCase());
                tituloelim.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Accion cancelada!");
            }
        }

    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed

        horariosss2.removeAll();
        horariosss2.add(crearrrhor);
        horariosss2.repaint();
        horariosss2.revalidate();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        mostrarhorariomod();
        horariosss2.removeAll();
        horariosss2.add(modificarrrhor);
        horariosss2.repaint();
        horariosss2.revalidate();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        try {
            con = DriverManager.getConnection(url, user, pass);
            sta = con.createStatement();
            String sql = "SELECT * FROM horarios ORDER BY Sala ASC;";
            DefaultTableModel modelo = new DefaultTableModel();
            ResultSet rst = sta.executeQuery(sql);//Servira para obtener los registro de una tabla

            //Se crea objeto para despues obtener el numero de columnas que tiene la BD
            ResultSetMetaData rsMd = rst.getMetaData();
            int numeroColumnas = rsMd.getColumnCount();//Se almacena el numero de columnas en una variable int

            this.tablamoshor.setModel(modelo);//El objeto anteriormente creado, se enlasa con el elemento JTable del layout

            //Con este ciclo se obtienen las columnas y se van insertando en la tabla del layout
            for (int i = 1; i <= numeroColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            //El ciclo while servirá para mostrar los registros de la tabla
            while (rst.next()) {
                Object[] fila = new Object[numeroColumnas];
                for (int i = 0; i < numeroColumnas; i++) {
                    fila[i] = rst.getObject(i + 1);//Se encuentran los registros
                }
                modelo.addRow(fila);//Y son añadidos al elemento JTable para ser mostrados en el layout
            }

            sta.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }
        horariosss2.removeAll();
        horariosss2.add(mostrarrrhor);
        horariosss2.repaint();
        horariosss2.revalidate();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        mostrarhorarioeliminar();
        horariosss2.removeAll();
        horariosss2.add(eliminarrrhor);
        horariosss2.repaint();
        horariosss2.revalidate();
    }//GEN-LAST:event_jButton16ActionPerformed

    private void tablahoraMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablahoraMousePressed

        if (evt.getClickCount() == 1) {
            pelicula = tablahora.getValueAt(tablahora.getSelectedRow(), 0).toString();
        }
    }//GEN-LAST:event_tablahoraMousePressed

    private void salahoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salahoraActionPerformed

    }//GEN-LAST:event_salahoraActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        try {
            boolean existe = false;
            if (pelicula == null) {
                JOptionPane.showMessageDialog(null, "No hay ninguna pelicula seleccionada o No existe ninguna pelicula, no se puede crear un horario!");
            } else {
                String sql = "SELECT * FROM horarios;";
                con = DriverManager.getConnection(url, user, pass);
                sta = con.createStatement();
                registro = sta.executeQuery(sql);
                int cont = 1;
                int sala1 = 0, sala2 = 0, sala3 = 0, sala4 = 0, sala5 = 0;
                while (registro.next()) {
                    if (Integer.parseInt(registro.getString(1)) == 1) {
                        sala1++;
                    } else if (Integer.parseInt(registro.getString(1)) == 2) {
                        sala2++;
                    } else if (Integer.parseInt(registro.getString(1)) == 3) {
                        sala3++;
                    } else if (Integer.parseInt(registro.getString(1)) == 4) {
                        sala4++;
                    } else if (Integer.parseInt(registro.getString(1)) == 5) {
                        sala5++;
                    }
                    if ((salahora.getSelectedItem().toString().equals(registro.getString(cont)) && horahora.getSelectedItem().toString().equals(registro.getString(3)))) {
                        JOptionPane.showMessageDialog(null, "Ya existe un horario registrado con estos datos, no es posible crearlo!");
                        existe = true;
                        break;
                    }
                }
                if (existe == false) {
                    String sql2 = "insert into horarios values('" + Integer.parseInt(salahora.getSelectedItem().toString()) + "','" + pelicula + "','" + horahora.getSelectedItem().toString() + "');";
                    insertar = con.prepareStatement(sql2);
                    insertar.executeUpdate(sql2);
                    JOptionPane.showMessageDialog(null, "Horario creado con exito!");
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error con mysql " + ex);
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void tablamodhorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablamodhorMousePressed
        if (evt.getClickCount() == 1) {
            pelicula = tablamodhor.getValueAt(tablamodhor.getSelectedRow(), 1).toString();
            salaeliminar = tablamodhor.getValueAt(tablamodhor.getSelectedRow(), 0).toString();
            horarioeliminar = tablamodhor.getValueAt(tablamodhor.getSelectedRow(), 2).toString();
        }
    }//GEN-LAST:event_tablamodhorMousePressed

    private void salamodhorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salamodhorActionPerformed

    }//GEN-LAST:event_salamodhorActionPerformed
    public void mostrarhorariomod() {
        try {
            con = DriverManager.getConnection(url, user, pass);
            sta = con.createStatement();
            String sql = "SELECT * FROM horarios ORDER BY Sala ASC;";
            DefaultTableModel modelo = new DefaultTableModel();
            ResultSet rst = sta.executeQuery(sql);//Servira para obtener los registro de una tabla

            //Se crea objeto para despues obtener el numero de columnas que tiene la BD
            ResultSetMetaData rsMd = rst.getMetaData();
            int numeroColumnas = rsMd.getColumnCount();//Se almacena el numero de columnas en una variable int

            this.tablamodhor.setModel(modelo);//El objeto anteriormente creado, se enlasa con el elemento JTable del layout

            //Con este ciclo se obtienen las columnas y se van insertando en la tabla del layout
            for (int i = 1; i <= numeroColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            //El ciclo while servirá para mostrar los registros de la tabla
            while (rst.next()) {
                Object[] fila = new Object[numeroColumnas];
                for (int i = 0; i < numeroColumnas; i++) {
                    fila[i] = rst.getObject(i + 1);//Se encuentran los registros
                }
                modelo.addRow(fila);//Y son añadidos al elemento JTable para ser mostrados en el layout
            }

            sta.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }
    }
    private void modifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifActionPerformed
        try {
            boolean existe = false;
            if (pelicula == null) {
                JOptionPane.showMessageDialog(null, "No hay ninguna pelicula seleccionada o No existe ninguna pelicula, no se puede crear un horario!");
            } else {
                String sql = "SELECT * FROM horarios";
                con = DriverManager.getConnection(url, user, pass);
                sta = con.createStatement();
                registro = sta.executeQuery(sql);
                int cont = 1;
                while (registro.next()) {
                    if ((salamodhor.getSelectedItem().toString().equals(registro.getString(cont)) && horamodhora.getSelectedItem().toString().equals(registro.getString(3)))) {
                        JOptionPane.showMessageDialog(null, "Ya existe un horario registrado con estos datos, no es posible crearlo!");
                        existe = true;
                        break;
                    }
                }
                if (existe == false) {
                    String sqleliminar = "delete from horarios where Sala=" + salaeliminar + " AND Horario='" + horarioeliminar + "';";
                    sta.execute(sqleliminar);
                    String eliminarboletos = "delete from boletoss where sala=" + salaeliminar + " AND horario='" + horarioeliminar + "';";
                    sta.execute(eliminarboletos);
                    String sql2 = "insert into horarios values('" + Integer.parseInt(salamodhor.getSelectedItem().toString()) + "','" + pelicula + "','" + horamodhora.getSelectedItem().toString() + "');";
                    insertar = con.prepareStatement(sql2);
                    insertar.executeUpdate(sql2);
                    mostrarhorario();
                    JOptionPane.showMessageDialog(null, "Horario modificado con exito!");
                }
                sta.close();
                mostrarhorariomod();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error al querer modificar el horario!");
        }
    }//GEN-LAST:event_modifActionPerformed

    private void tablamoshorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablamoshorMousePressed

    }//GEN-LAST:event_tablamoshorMousePressed

    private void tablaelihorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaelihorMousePressed
        if (evt.getClickCount() == 1) {
            pelicula = tablaelihor.getValueAt(tablaelihor.getSelectedRow(), 1).toString();
            salaeliminar = tablaelihor.getValueAt(tablaelihor.getSelectedRow(), 0).toString();
            horarioeliminar = tablaelihor.getValueAt(tablaelihor.getSelectedRow(), 2).toString();
        }
    }//GEN-LAST:event_tablaelihorMousePressed
    public void mostrarhorarioeliminar() {
        try {
            con = DriverManager.getConnection(url, user, pass);
            sta = con.createStatement();
            String sql = "SELECT * FROM horarios ORDER BY Sala ASC;";
            DefaultTableModel modelo = new DefaultTableModel();
            ResultSet rst = sta.executeQuery(sql);//Servira para obtener los registro de una tabla

            //Se crea objeto para despues obtener el numero de columnas que tiene la BD
            ResultSetMetaData rsMd = rst.getMetaData();
            int numeroColumnas = rsMd.getColumnCount();//Se almacena el numero de columnas en una variable int

            this.tablaelihor.setModel(modelo);//El objeto anteriormente creado, se enlasa con el elemento JTable del layout

            //Con este ciclo se obtienen las columnas y se van insertando en la tabla del layout
            for (int i = 1; i <= numeroColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            //El ciclo while servirá para mostrar los registros de la tabla
            while (rst.next()) {
                Object[] fila = new Object[numeroColumnas];
                for (int i = 0; i < numeroColumnas; i++) {
                    fila[i] = rst.getObject(i + 1);//Se encuentran los registros
                }
                modelo.addRow(fila);//Y son añadidos al elemento JTable para ser mostrados en el layout
            }

            sta.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }
    }
    private void elimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elimActionPerformed
        try {
            if (pelicula == null) {
                JOptionPane.showMessageDialog(null, "No hay ninguna pelicula seleccionada o No existe ninguna pelicula, no se puede crear un horario!");
            } else {
                String sql = "SELECT * FROM horarios;";
                con = DriverManager.getConnection(url, user, pass);
                sta = con.createStatement();
                String sql1 = "delete from horarios where Sala=" + salaeliminar + " AND Horario='" + horarioeliminar + "';";
                sta.execute(sql1);
                String eliminarboletos = "delete from boletoss where sala=" + salaeliminar + " AND horario='" + horarioeliminar + "';";
                sta.execute(eliminarboletos);
                sta.close();
                mostrarhorarioeliminar();
                JOptionPane.showMessageDialog(null, "Horario eliminado con exito!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error al intentar eliminar horario!");
        }
    }//GEN-LAST:event_elimActionPerformed
    private void recarga() {
        try {
            con = DriverManager.getConnection(url, user, pass);
            sta = con.createStatement();
            String sql = "SELECT * FROM usuarioss;";
            DefaultTableModel modelo = new DefaultTableModel();
            ResultSet rst = sta.executeQuery(sql);//Servira para obtener los registro de una tabla

            //Se crea objeto para despues obtener el numero de columnas que tiene la BD
            ResultSetMetaData rsMd = rst.getMetaData();
            int numeroColumnas = rsMd.getColumnCount();//Se almacena el numero de columnas en una variable int

            this.tablausu.setModel(modelo);//El objeto anteriormente creado, se enlasa con el elemento JTable del layout

            //Con este ciclo se obtienen las columnas y se van insertando en la tabla del layout
            for (int i = 1; i <= numeroColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            //El ciclo while servirá para mostrar los registros de la tabla
            while (rst.next()) {
                Object[] fila = new Object[numeroColumnas];
                for (int i = 0; i < numeroColumnas; i++) {
                    fila[i] = rst.getObject(i + 1);//Se encuentran los registros
                }
                modelo.addRow(fila);//Y son añadidos al elemento JTable para ser mostrados en el layout
            }

            sta.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }
    }
    private void z3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_z3ActionPerformed
        recarga();
        padre.removeAll();
        padre.add(usuariosss);
        padre.repaint();
        padre.revalidate();
    }//GEN-LAST:event_z3ActionPerformed

    private void registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarActionPerformed
        try {
            if ((nombreusu.getText().equals("") && apellidousu.getText().equals("") && telefonousu.getText().equals("") && direccionusu.getText().equals("") && correousu.getText().equals("") && usuariousu.getText().equals("")) || nombreusu.getText().equals("") || apellidousu.getText().equals("") || telefonousu.getText().equals("") || direccionusu.getText().equals("") || correousu.getText().equals("") || usuariousu.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Los campos deben de estar llenos para ingresar un usuario!");
            } else {
                boolean existe = false;
                int num = 0;
                String sqll = "SELECT * FROM usuarioss;";
                con = DriverManager.getConnection(url, user, pass);
                sta = con.createStatement();
                registro = sta.executeQuery(sqll);
                int cont = 1;
                while (registro.next()) {
                    if (usuariousu.getText().equals(registro.getString(8))) {
                        JOptionPane.showMessageDialog(null, "Este usuario ya esta en existencia!");
                        existe = true;
                        break;
                    }
                }
                if (existe == false) {
                    String sql = "insert into usuarioss values(" + num + ",'" + nombreusu.getText().toLowerCase() + "','" + apellidousu.getText().toLowerCase() + "'," + telefonousu.getText() + ",'" + correousu.getText() + "','" + direccionusu.getText() + "'," + 0 + ",'" + usuariousu.getText().toLowerCase() + "');";
                    insertar = con.prepareStatement(sql);
                    insertar.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Se ha registrado el usuario con exito!");
                    recarga();
                    nombreusu.setText("");
                    apellidousu.setText("");
                    telefonousu.setText("");
                    correousu.setText("");
                    direccionusu.setText("");
                    usuariousu.setText("");
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }
    }//GEN-LAST:event_registrarActionPerformed

    private void tablausuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablausuMousePressed
        if (evt.getClickCount() == 1) {
            nombreu = tablausu.getValueAt(tablausu.getSelectedRow(), 1).toString();
            apellidou = tablausu.getValueAt(tablausu.getSelectedRow(), 2).toString();
            usuariou = tablausu.getValueAt(tablausu.getSelectedRow(), 7).toString();
        }
    }//GEN-LAST:event_tablausuMousePressed

    private void borActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borActionPerformed
        try {
            if (nombreu == null || apellidou == null) {
                JOptionPane.showMessageDialog(null, "Debe de seleccionar un usuario para poder borrarlo!");
            }
            boolean existe = false;
            String sql = "SELECT * FROM usuarioss;";
            con = DriverManager.getConnection(url, user, pass);
            sta = con.createStatement();
            registro = sta.executeQuery(sql);
            while (registro.next()) {
                if (usuariou.equals(registro.getString(8))) {
                    String borrar = "delete from usuarioss where usuario='" + usuariou + "';";
                    sta.execute(borrar);
                    String ademas = "delete from boletoss where usuario='" + usuariou + "';";
                    sta.execute(ademas);
                    recarga();
                    JOptionPane.showMessageDialog(null, "Ha eliminado el usuario con exito!");
                    break;
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
        }
    }//GEN-LAST:event_borActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        padre.removeAll();
        padre.add(mostrableee);
        padre.repaint();
        padre.revalidate();
    }//GEN-LAST:event_jButton18ActionPerformed

    private void nombreusuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreusuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreusuActionPerformed

    private void tablamosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablamosMousePressed
        if (evt.getClickCount() == 1) {
            pelicula = tablamos.getValueAt(tablamos.getSelectedRow(), 0).toString();
            try {
                String query = "SELECT * FROM peliculas;";
                con = DriverManager.getConnection(url, user, pass);
                sta = con.createStatement();
                registro = sta.executeQuery(query);
                while (registro.next()) {
                    if (pelicula.equals(registro.getString(1))) {
                        gen1.setText(registro.getString(2));
                        dur1.setText(registro.getString(3));
                        dir1.setText(registro.getString(4));
                        repp1.setText(registro.getString(6));
                        String img = registro.getString(7);
                        icono = new ImageIcon(img);
                        Icon fondo1 = new ImageIcon(icono.getImage().getScaledInstance(imagen1.getWidth(), imagen1.getHeight(), Image.SCALE_DEFAULT));
                        imagen1.setIcon(fondo1);
                    }

                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Ha ocurrido un error " + ex);
            }
        }

    }//GEN-LAST:event_tablamosMousePressed

    private void asiento1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asiento1ActionPerformed
        
    }//GEN-LAST:event_asiento1ActionPerformed

    private void asiento2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asiento2ActionPerformed

    }//GEN-LAST:event_asiento2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apellidousu;
    private javax.swing.JButton asiento1;
    private javax.swing.JButton asiento10;
    private javax.swing.JButton asiento11;
    private javax.swing.JButton asiento12;
    private javax.swing.JButton asiento13;
    private javax.swing.JButton asiento14;
    private javax.swing.JButton asiento15;
    private javax.swing.JButton asiento16;
    private javax.swing.JButton asiento17;
    private javax.swing.JButton asiento18;
    private javax.swing.JButton asiento19;
    private javax.swing.JButton asiento2;
    private javax.swing.JButton asiento20;
    private javax.swing.JButton asiento21;
    private javax.swing.JButton asiento22;
    private javax.swing.JButton asiento23;
    private javax.swing.JButton asiento24;
    private javax.swing.JButton asiento25;
    private javax.swing.JButton asiento26;
    private javax.swing.JButton asiento27;
    private javax.swing.JButton asiento28;
    private javax.swing.JButton asiento29;
    private javax.swing.JButton asiento3;
    private javax.swing.JButton asiento30;
    private javax.swing.JButton asiento4;
    private javax.swing.JButton asiento5;
    private javax.swing.JButton asiento6;
    private javax.swing.JButton asiento7;
    private javax.swing.JButton asiento8;
    private javax.swing.JButton asiento9;
    private javax.swing.JComboBox<String> asientocomprarrr;
    private javax.swing.JComboBox<String> asientomodificar;
    private javax.swing.JButton bor;
    private javax.swing.JButton buscar;
    private javax.swing.JButton buscar1;
    private javax.swing.JPanel buscarrrpeli;
    private javax.swing.JButton canbol;
    private javax.swing.JButton canbol1;
    private javax.swing.JButton canbol2;
    private javax.swing.JPanel cancelarrr;
    private javax.swing.JPanel comprarrr;
    private javax.swing.JTextField correousu;
    private javax.swing.JPanel crearrrhor;
    private javax.swing.JLabel dir;
    private javax.swing.JLabel dir1;
    private javax.swing.JTextField direccionusu;
    private javax.swing.JLabel director;
    private javax.swing.JLabel director1;
    private javax.swing.JLabel directorbus;
    private javax.swing.JTextField directorregi;
    private javax.swing.JLabel dur;
    private javax.swing.JLabel dur1;
    private javax.swing.JLabel duracion;
    private javax.swing.JLabel duracion1;
    private javax.swing.JLabel duracionbus;
    private javax.swing.JTextField duracionregi;
    private javax.swing.JButton elim;
    private javax.swing.JPanel eliminarrrhor;
    private javax.swing.JPanel eliminarrrpeli;
    private javax.swing.JLabel gen;
    private javax.swing.JLabel gen1;
    private javax.swing.JLabel genero;
    private javax.swing.JLabel genero1;
    private javax.swing.JLabel generobus;
    private javax.swing.JTextField generoregi;
    private javax.swing.JComboBox<String> horahora;
    private javax.swing.JComboBox<String> horamodhora;
    private javax.swing.JPanel horariosss;
    private javax.swing.JPanel horariosss2;
    private javax.swing.JLabel imagen;
    private javax.swing.JLabel imagen1;
    private javax.swing.JLabel imagen2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton56;
    private javax.swing.JButton jButton57;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel jtitulo;
    private javax.swing.JButton modif;
    private javax.swing.JPanel modificarrr;
    private javax.swing.JPanel modificarrrhor;
    private javax.swing.JPanel mostrableee;
    private javax.swing.JPanel mostrarrrhor;
    private javax.swing.JPanel mostrarrrpeli;
    private javax.swing.JLabel nhor;
    private javax.swing.JTextField nombreusu;
    private javax.swing.JLabel nsal;
    private javax.swing.JPanel padre;
    private javax.swing.JPanel peliculasss;
    private javax.swing.JPanel peliculasss2;
    private javax.swing.JButton registrar;
    private javax.swing.JPanel registrarrrpeli;
    private javax.swing.JButton registrarrrpeli1;
    private javax.swing.JLabel reparto;
    private javax.swing.JLabel reparto1;
    private javax.swing.JLabel repartobus;
    private javax.swing.JTextField repartoregi;
    private javax.swing.JLabel repp;
    private javax.swing.JLabel repp1;
    private javax.swing.JComboBox<String> salahora;
    private javax.swing.JComboBox<String> salamodhor;
    private javax.swing.JButton subirregi;
    private javax.swing.JTable tablacancelar;
    private javax.swing.JTable tablacomprar;
    private javax.swing.JTable tablaelihor;
    private javax.swing.JTable tablahora;
    private javax.swing.JTable tablamodhor;
    private javax.swing.JTable tablamodificar1;
    private javax.swing.JTable tablamodificar2;
    private javax.swing.JTable tablamos;
    private javax.swing.JTable tablamoshor;
    private javax.swing.JTable tablausu;
    private javax.swing.JPanel taquillaaa;
    private javax.swing.JPanel taquillaaa2;
    private javax.swing.JTextField telefonousu;
    private javax.swing.JTextField titulobus;
    private javax.swing.JTextField tituloelim;
    private javax.swing.JTextField tituloregi;
    private javax.swing.JPanel usuariosss;
    private javax.swing.JTextField usuariousu;
    private javax.swing.JButton z1;
    private javax.swing.JButton z2;
    private javax.swing.JButton z3;
    private javax.swing.JButton z4;
    // End of variables declaration//GEN-END:variables
}
